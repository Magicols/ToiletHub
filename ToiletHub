local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Toilet Tower DefenseðŸš½",
   LoadingTitle = "Toilet Hub",
   LoadingSubtitle = "by Magicols",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "ToiletHub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Toilet Hub/Key",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("AutoFarm", nil) -- Title, Image

local Toggle = MainTab:CreateToggle({
   Name = "CoinFarm",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   print("on")
   -- autofarm
wait(0.5)

repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer:FindFirstChild("PlayerGui")

if game.PlaceId == 13775256536 then
    while wait(3) do
        for i, v in next, workspace.Lifts:GetChildren() do
            if v.Name == "ToiletHQ" then
                if math.random(1,5) == 3 and v.Base.StatusGui.PlayersCount.Text == "0/5" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Base.CFrame

                    repeat task.wait() until game.Players.LocalPlayer.PlayerGui.Lobby.QueueFrame.Visible

                    local StartButton = game.Players.LocalPlayer.PlayerGui.Lobby.QueueFrame.Start

                    firesignal(StartButton.Activated)

                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, -100, 0)

                    break
                end
            end
        end

        task.wait()
    end
else
    wait(1)

    if not game.Players.LocalPlayer.PlayerGui:FindFirstChild("VotingFrame") then
        return game.Players.LocalPlayer:Kick("Invalid game.")
    end

    repeat task.wait() until game.Players.LocalPlayer.PlayerGui.VotingFrame.VoteFrame.VoteMainFrame.Visible

    wait(1)

    firesignal(game.Players.LocalPlayer.PlayerGui.VotingFrame.VoteFrame.VoteMainFrame.MainFrame.Nightmare.Vote.Vote.Activated)

    while task.wait() do
    repeat task.wait() until game.Players.LocalPlayer.PlayerGui.Match.TopFrame.SkipWave.Visible

    firesignal(game.Players.LocalPlayer.PlayerGui.Match.TopFrame.SkipWave.Activated)
    end
end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "AntiLag",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   print("AntiLag on")
   while task.wait() do
    wait(25)
    repeat task.wait() until game.StarterGui.Match.TopFrame.WaveNumber.Visible do
    task.wait(1)
    workspace.Attackers:Destroy()
    end
end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "AutoLobby",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   print("AutoLobby on")
   while task.wait() do
    wait(25)
    repeat task.wait() until game:GetService("Players").LocalPlayer.PlayerGui.Match.MatchFinishFrame.Visible
    task.wait(0.2)
    local asdf = require(game.Players.LocalPlayer.PlayerScripts.ChatScript.ChatMain)
    asdf.MessagePosted:fire("/lobby")
end
   end,
})
